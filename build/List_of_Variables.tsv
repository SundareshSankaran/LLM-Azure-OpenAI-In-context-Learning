	variable	description	type	value
0	params	Parameters	page	
1	section_input_params	Parameters	section	
2	inputData	Select input data:	inputtable	
3	textCol	Select text column:	columnselector	
4	docId	Select ID column:	columnselector	
5	copyVarList	Select additional columns to copy over:	columnselector	
6	section_prompts	Prompts	section	
7	systemPrompt	Provide system prompt:	textarea	
8	text_system_prompt		text	Use the system prompt to provide broad instructions to the LLM such as role, task description and response specification.
9	userPrompt	Provide user prompt:	textarea	
10	text_user_prompt		text	Use the user prompt to provide specific instructions on the task to perform.  Use tags like {Question}, {Context} etc. to refer to the context provided.
11	userExample	Provide illustrative example(s):	textarea	
12	text_user_example		text	Use the user example to provide 0, 1, or more illustrative examples of context and desired response from the LLM. Tag examples as Example: and Answer:.
13	section_output_specs	Output specification	section	
14	temperature	Select temperature for output:	numstepper	
15	text_temperature		text	Use the temperature control to govern how the LLM generates its response based on next word prediction.
16	outputTable	Provide output table:	outputtable	
17	config	Configuration	page	
18	section_gen_model	Text generation model	section	
19	genModelDeployment	Provide name of your Azure OpenAI generation model deployment:	textfield	
20	section_azure_openai	Azure OpenAI service:	section	
21	azureKeyLocation	Provide path to your Azure OpenAI key:	path	
22	text_key_details		text	Ensure this key is located in a file saved in a secure folder.
23	azureOpenAIEndpoint	Provide URL for Azure OpenAI service endpoint:	textfield	
24	azureRegion	Provide region for Azure OpenAI service	textfield	
25	openAIVersion	OpenAI API Version	textfield	
26	about	About	page	
27	about_description		text	LLM - Azure OpenAI In-context Learning==============================================This custom step helps you interact with a Large Language Model (LLM) calling an [Azure OpenAI](https://microsoftlearning.github.io/mslearn-openai/Instructions/Exercises/01-get-started-azure-openai.html) service to process simple instructions on specified input data. It uses an approach called In-context learning which uses provided examples to perform a task.  If no example is provided, then the LLM simply uses the provided context.  This is useful for cases where a call to an LLM does not require prior search, filter or query of data sources (such as what Retrieval Augmented Generation provides) . Run inside a SAS session, this custom step takes either a SAS dataset or a CAS table as input and returns a SAS dataset (or CAS table) as output, with the response added as a new variable.
28	section_prereqs	Prerequisites	section	
29	text_prereqs		text	1. Python is available to the SAS Viya Compute session.  2. Python packages to be installed:   i.  openai: https://pypi.org/project/openai/  ii.   pandas: https://pypi.org/project/pandas/  3. Viya 4 environment version 2025.01 or later 4. Valid Azure OpenAI service with large language models deployed.  Refer here for instructions: https://learn.microsoft.com/en-us/azure/ai-services/openai/quickstart?tabs=command-line%2Cpython-new&pivots=programming-language-studio
30	section_assumptions	Assumptions	section	
31	text_assumptions		text	Current assumptions for this initial versions (future versions may improve upon the same):1. Users  choose either a SAS dataset or Cloud Analytics Services (CAS) table as their input 2. User has already configured Azure OpenAI to deploy both an embedding function and LLM service, or knows the deployment names.
32	about_parameters	Parameters	section	
33	parameters_input	Input parameters	section	
34	input_parameters_text		text	1. Input Data (input port, required): attach either a SAS dataset or a CAS table to the same.2. Text column (column selector, required): select one column containing text to serve as context3. ID column (column selector, required): select an ID column4. System prompt (text area, required, boilerplate default): Provide a system prompt which is used to provide broad instructions about persona, range of tasks and response specification for LLM5. User prompt (text area, required, boilerplate default): Provide a user prompt which specifies the task to perform6. Illustrative example (text area, optional): Provide an example of task and response to help the LLM understand how to process instructions.
35	parameters_output_specs	Output specifications	section	
36	output_parameters_text		text	1. Temperature (numeric stepper, default 0): temperature for an LLM affects its abiity to predict the next word when generating responses.  A rule of thumb is that a temperature closer to 0 indicates the model uses the predicted next word with the highest probability, whereas a temperature of 1 increases the randomness with which the model predicts the next word.  2. Output table (output port, required): attach either a CAS table or sas7bdat to the output port of this node to hold results.  These results contain the LLM's answer, the original question and columns carried along.
37	parameters_config	Configuration 	section	
38	output_parameters_text_1		text	1. Text generation model (text field, required): provide the name of an Azure OpenAI text generation deployment.  For convenience, you may choose to use the same name as the OpenAI LLM. Example, gpt-35-turbo to gpt-35-turbo.2. Azure OpenAI service details (file selector for key and text fields, required): provide a path to your Azure OpenAI access key.  Ensure this key is saved within a text file in a secure location on the filesystem.  Users are responsible for providing their keys to use this service.  In addition, also refer to your Azure OpenAI service to obtain the service endpoint and region. The OpenAI API version can be changed if required.
39	about_runtimecontrol	Run-time Control	section	
40	runtimecontrol_text		text	"Note: Run-time control is optional.  You may choose whether to execute the main code of this step or not, based on upstream conditions set by earlier SAS programs.  This includes nodes run prior to this custom step earlier in a SAS Studio Flow, or a previous program in the same session.Refer this blog (https://communities.sas.com/t5/SAS-Communities-Library/Switch-on-switch-off-run-time-control-of-SAS-Studio-Custom-Steps/ta-p/885526) for more details on the concept.The following macro variable,_aor_run_triggerwill initialize with a value of 1 by default, indicating an ""enabled"" status and allowing the custom step to run.If you wish to control execution of this custom step, include code in an upstream SAS program to set this variable to 0.  This ""disables"" execution of the custom step.To ""disable"" this step, run the following code upstream:%global _aicl_run_trigger;%let _aicl_run_trigger =0;To ""enable"" this step again, run the following (it's assumed that this has already been set as a global variable):%let _aicl_run_trigger =1;IMPORTANT: Be aware that disabling this step means that none of its main execution code will run, and any  downstream code which was dependent on this code may fail.  Change this setting only if it aligns with the objective of your SAS Studio program."
41	about_documentation	Documentation	section	
42	documentation_text		text	1.  Azure OpenAI service: https://learn.microsoft.com/en-us/azure/ai-services/openai/2.  SAS Communities article on configuring Viya for Python integration: https://communities.sas.com/t5/SAS-Communities-Library/Configuring-SAS-Viya-for-Python-Integration/ta-p/8474593. The SAS Viya Platform Deployment Guide (refer to SAS Configurator for Open Source within): https://go.documentation.sas.com/doc/en/itopscdc/default/itopssr/p1n66p7u2cm8fjn13yeggzbxcqqg.htm?fromDefault=#p19cpvrrjw3lurn135ih46tjm7oi 4. OpenAI API versions change periodically. Keep track of them here: https://learn.microsoft.com/en-us/azure/ai-services/openai/api-version-deprecation
43	version_text		text	Version: 1.0  (05FEB2025)
44	contact_text		text	Created/contact: - Sundaresh Sankaran (sundaresh.sankaran@sas.com) - Crystal Baker (crystal.baker@sas.com)
